# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar DateTime

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

type Department {
  id: ID!
  name: String!
  code: String!
  ancestry: String!
  versionId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DepartmentTree {
  id: ID!
  name: String!
  code: String!
  ancestry: String!
  children: [DepartmentTree!]!
}

type ResponseVersion {
  id: ID!
  name: String!
  startedAt: DateTime!
  status: String!
}

type User {
  id: ID!
  name: String!
}

type Version {
  id: ID!
  name: String!
  startedAt: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  todos: [Todo!]!
  getDepartmentTree(id: ID!): [DepartmentTree!]!
  getVersion(id: ID!): Version!
  getVersions: [ResponseVersion!]!
}

input NewTodo {
  text: String!
  userId: String!
}

input NewDepartment {
  name: String!
  code: String!
  ancestry: String!
  versionId: ID!
}

input NewVersion {
  name: String!
  startedAt: DateTime!
}

input UpdateVersion {
  id: ID!
  name: String!
  startedAt: DateTime!
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
  createDepartment(input: NewDepartment!): Department!
  createVersion(input: NewVersion!): Version!
  deleteVersion(id: ID!): Boolean!
  updateVersion(input: UpdateVersion!): Version!
}
